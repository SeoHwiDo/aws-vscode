#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 262144 bytes for committing reserved memory.
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (os_linux.cpp:2798), pid=22699, tid=0x00007fc7803ad700
#
# JRE version: OpenJDK Runtime Environment (8.0_272-b10) (build 1.8.0_272-b10)
# Java VM: OpenJDK 64-Bit Server VM (25.272-b10 mixed mode linux-amd64 compressed oops)
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#

---------------  T H R E A D  ---------------

Current thread (0x00007fc76010c800):  JavaThread "Thread-8" [_thread_in_vm, id=22820, stack(0x00007fc7802ad000,0x00007fc7803ae000)]

Stack: [0x00007fc7802ad000,0x00007fc7803ae000],  sp=0x00007fc7803a92b0,  free space=1008k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0xbac45d]  VMError::report_and_die()+0x2cd
V  [libjvm.so+0x4f3764]  report_vm_out_of_memory(char const*, int, unsigned long, VMErrorType, char const*)+0xb4
V  [libjvm.so+0x971109]  os::pd_commit_memory(char*, unsigned long, unsigned long, bool)+0xf9
V  [libjvm.so+0x9686de]  os::commit_memory(char*, unsigned long, unsigned long, bool)+0x2e
V  [libjvm.so+0xba8e2c]  VirtualSpace::expand_by(unsigned long, bool)+0x13c
V  [libjvm.so+0x8de1e7]  VirtualSpaceList::get_new_chunk(unsigned long, unsigned long)+0x1a7
V  [libjvm.so+0x8e039c]  SpaceManager::grow_and_allocate(unsigned long)+0x1dc
V  [libjvm.so+0x8e0c11]  SpaceManager::allocate(unsigned long)+0x1d1
V  [libjvm.so+0x8e1615]  Metaspace::allocate(ClassLoaderData*, unsigned long, bool, MetaspaceObj::Type, Thread*)+0x55
V  [libjvm.so+0x4ef38b]  ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0xbb
V  [libjvm.so+0x44faa0]  ClassFileParser::parse_constant_pool(Thread*)+0xf0
V  [libjvm.so+0x450d93]  ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*)+0x5a3
V  [libjvm.so+0xb20471]  SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*)+0x191
V  [libjvm.so+0x747099]  jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, unsigned char, Thread*)+0x269
V  [libjvm.so+0x7488ab]  JVM_DefineClassWithSource+0x8b
C  [libjava.so+0xdfca]  Java_java_lang_ClassLoader_defineClass1+0x17a
J 1096  java.lang.ClassLoader.defineClass1(Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; (0 bytes) @ 0x00007fc7853c0fcb [0x00007fc7853c0ec0+0x10b]
J 971 C1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; (43 bytes) @ 0x00007fc78534d69c [0x00007fc78534d0c0+0x5dc]
J 1239 C1 org.eclipse.osgi.internal.loader.ModuleClassLoader.defineClass(Ljava/lang/String;[BLorg/eclipse/osgi/internal/loader/classpath/ClasspathEntry;)Lorg/eclipse/osgi/internal/loader/ModuleClassLoader$DefineClassResult; (138 bytes) @ 0x00007fc785434c94 [0x00007fc7854348a0+0x3f4]
J 1203 C1 org.eclipse.osgi.internal.loader.classpath.ClasspathManager.defineClass(Ljava/lang/String;[BLorg/eclipse/osgi/internal/loader/classpath/ClasspathEntry;Lorg/eclipse/osgi/storage/bundlefile/BundleEntry;Ljava/util/List;)Ljava/lang/Class; (636 bytes) @ 0x00007fc78541570c [0x00007fc785413aa0+0x1c6c]
J 1127 C1 org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findClassImpl(Ljava/lang/String;Lorg/eclipse/osgi/internal/loader/classpath/ClasspathEntry;Ljava/util/List;)Ljava/lang/Class; (308 bytes) @ 0x00007fc7853e00c4 [0x00007fc7853dcde0+0x32e4]
J 1198 C1 org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClassImpl(Ljava/lang/String;[Lorg/eclipse/osgi/internal/loader/classpath/ClasspathEntry;Ljava/util/List;)Ljava/lang/Class; (55 bytes) @ 0x00007fc785410ddc [0x00007fc785410c60+0x17c]
J 1128 C1 org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClassImpl(Ljava/lang/String;Ljava/util/List;)Ljava/lang/Class; (139 bytes) @ 0x00007fc7853e536c [0x00007fc7853e4de0+0x58c]
J 1157 C1 org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(Ljava/lang/String;)Ljava/lang/Class; (210 bytes) @ 0x00007fc7853fb044 [0x00007fc7853fa100+0xf44]
J 1097 C1 org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(Ljava/lang/String;)Ljava/lang/Class; (152 bytes) @ 0x00007fc7853c23ec [0x00007fc7853c1540+0xeac]
J 1082 C1 org.eclipse.osgi.internal.loader.BundleLoader.findClass(Ljava/lang/String;)Ljava/lang/Class; (531 bytes) @ 0x00007fc7853af35c [0x00007fc7853ab080+0x42dc]
J 1084 C1 org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; (119 bytes) @ 0x00007fc7853b6da4 [0x00007fc7853b5ee0+0xec4]
J 1245 C1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; (7 bytes) @ 0x00007fc78543ce04 [0x00007fc78543cd00+0x104]
v  ~StubRoutines::call_stub
V  [libjvm.so+0x6a7967]  JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)+0xd37
V  [libjvm.so+0x6a527f]  JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*)+0x25f
V  [libjvm.so+0x6a5854]  JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Handle, Thread*)+0x64
V  [libjvm.so+0xb1d260]  SystemDictionary::load_instance_class(Symbol*, Handle, Thread*)+0x2d0
V  [libjvm.so+0xb1dc64]  SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*)+0x924
V  [libjvm.so+0xb1fa8c]  SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*)+0x5c
V  [libjvm.so+0x4e6159]  ConstantPool::klass_at_impl(constantPoolHandle, int, Thread*)+0x349
V  [libjvm.so+0x4e703a]  ConstantPool::klass_ref_at(int, Thread*)+0xca
V  [libjvm.so+0x82ebc5]  LinkResolver::resolve_invokestatic(CallInfo&, constantPoolHandle, int, Thread*)+0xb5
V  [libjvm.so+0x8317ad]  LinkResolver::resolve_invoke(CallInfo&, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*)+0x13d
V  [libjvm.so+0x69aeee]  InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code)+0x5de
j  org.jsoup.safety.Whitelist.addEnforcedAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/safety/Whitelist;+51
j  org.jsoup.safety.Whitelist.basic()Lorg/jsoup/safety/Whitelist;+274
j  org.jsoup.safety.Whitelist.basicWithImages()Lorg/jsoup/safety/Whitelist;+0
j  com.overzealous.remark.Remark.<init>(Lcom/overzealous/remark/Options;)V+28
j  org.eclipse.jdt.ls.core.internal.javadoc.JavaDoc2MarkdownConverter.<clinit>()V+40
v  ~StubRoutines::call_stub
V  [libjvm.so+0x6a7967]  JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)+0xd37
V  [libjvm.so+0x6597ff]  InstanceKlass::call_class_initializer_impl(instanceKlassHandle, Thread*)+0xff
V  [libjvm.so+0x659b83]  InstanceKlass::initialize_impl(instanceKlassHandle, Thread*)+0x313
V  [libjvm.so+0x659ff0]  InstanceKlass::initialize(Thread*)+0x60
V  [libjvm.so+0x695474]  InterpreterRuntime::_new(JavaThread*, ConstantPool*, int)+0x314
j  org.eclipse.jdt.ls.core.internal.javadoc.JavadocContentAccess2.getMarkdownContentReader(Lorg/eclipse/jdt/core/IJavaElement;)Ljava/io/Reader;+6
j  org.eclipse.jdt.ls.core.internal.HoverInfoProvider.computeJavadoc(Lorg/eclipse/jdt/core/IJavaElement;)Lorg/eclipse/lsp4j/MarkedString;+65
j  org.eclipse.jdt.ls.core.internal.HoverInfoProvider.computeHover(IILorg/eclipse/core/runtime/IProgressMonitor;)Ljava/util/List;+263
j  org.eclipse.jdt.ls.core.internal.handlers.HoverHandler.computeHover(Lorg/eclipse/jdt/core/ITypeRoot;IILorg/eclipse/core/runtime/IProgressMonitor;)Ljava/util/List;+20
j  org.eclipse.jdt.ls.core.internal.handlers.HoverHandler.hover(Lorg/eclipse/lsp4j/TextDocumentPositionParams;Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/lsp4j/Hover;+44
j  org.eclipse.jdt.ls.core.internal.syntaxserver.SyntaxLanguageServer.lambda$8(Lorg/eclipse/jdt/ls/core/internal/handlers/HoverHandler;Lorg/eclipse/lsp4j/HoverParams;Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/lsp4j/Hover;+3
j  org.eclipse.jdt.ls.core.internal.syntaxserver.SyntaxLanguageServer$$Lambda$87.apply(Ljava/lang/Object;)Ljava/lang/Object;+12
j  org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(Ljava/util/function/Function;Lorg/eclipse/lsp4j/jsonrpc/CancelChecker;)Ljava/lang/Object;+6
j  org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer$$Lambda$65.apply(Ljava/lang/Object;)Ljava/lang/Object;+12
j  java.util.concurrent.CompletableFuture.uniApply(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;Ljava/util/concurrent/CompletableFuture$UniApply;)Z+85
j  java.util.concurrent.CompletableFuture$UniApply.tryFire(I)Ljava/util/concurrent/CompletableFuture;+29
j  java.util.concurrent.CompletableFuture$Completion.run()V+2
j  java.lang.Thread.run()V+11
v  ~StubRoutines::call_stub
V  [libjvm.so+0x6a7967]  JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)+0xd37
V  [libjvm.so+0x6a527f]  JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*)+0x25f
V  [libjvm.so+0x6a57d7]  JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*)+0x57
V  [libjvm.so+0x74671b]  thread_entry(JavaThread*, Thread*)+0x7b
V  [libjvm.so+0xb4d755]